plugins {
    id 'java'
    id "org.sonarqube" version "2.6.2"
}

group 'ru.letnes'
version '1.0-SNAPSHOT'

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectName", "ViBot"
        property "sonar.projectKey", "ViBot"
        property "sonar.organization", "avsharapov-github"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.language", "java"
        property "sonar.login", System.getenv("SONAR_TOKEN")//"78281aa630f69e55aa6a73088862ce366eb61099"
        property "sonar.jacoco.reportPaths", "$rootProject.buildDir/jacoco/alltest.exec"
        property "sonar.exclusions", ["**ru/letnes/app/**"]
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1'
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.3.1'
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.1'
        testCompile group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.3.1'
        testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.22.0'
        testCompile group: 'org.mockito', name: 'mockito-core', version: '2.22.0'
    }

    test {
        useJUnitPlatform()
    }
    tasks.withType(Test) {
        jacoco {
            destinationFile = file("$rootProject.buildDir/jacoco/alltest.exec")
        }
    }
}

task cleanJacoco(dependsOn: 'clean') {  delete "$buildDir/jacoco" }

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled = true
        xml.setDestination(new File("${buildDir}/reports/jacoco/report.xml"))
        html.setEnabled(true)
        html.setDestination(new File("${buildDir}/reports/jacoco/report.html"))
    }

    dependencies {
        subprojects {
            test
        }
    }
}